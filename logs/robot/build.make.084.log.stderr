[01m[K/home/hcappel1/MultiAgentWBC/src/robot/src/control_node.cpp:137:6:[m[K [01;31m[Kerror: [m[Kprototype for â€˜[01m[Kbool Kinematics::Feasibility(Kinematics::VectorXd)[m[Kâ€™ does not match any in class â€˜[01m[KKinematics[m[Kâ€™
 bool Kinematics::Feasibility(VectorXd joint){
[01;32m[K      ^[m[K
In file included from [01m[K/home/hcappel1/MultiAgentWBC/src/robot/src/control_node.cpp:11:0[m[K:
[01m[K/home/hcappel1/MultiAgentWBC/src/robot/include/control_node.hpp:32:11:[m[K [01;31m[Kerror: [m[Kcandidate is: Kinematics::VectorXd Kinematics::Feasibility(Kinematics::VectorXd)
  VectorXd Feasibility(VectorXd joint);
[01;32m[K           ^[m[K
[01m[K/home/hcappel1/MultiAgentWBC/src/robot/src/control_node.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[01m[K/home/hcappel1/MultiAgentWBC/src/robot/src/control_node.cpp:206:14:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator![m[Kâ€™ (operand type is â€˜[01m[KKinematics::VectorXd {aka Eigen::Matrix<double, -1, 1>}[m[Kâ€™)
     else if (!kinematics.Feasibility(joint)){
[01;32m[K              ^[m[K
[01m[K/home/hcappel1/MultiAgentWBC/src/robot/src/control_node.cpp:206:14:[m[K [01;36m[Knote: [m[Kcandidate: operator!(bool) <built-in>
[01m[K/home/hcappel1/MultiAgentWBC/src/robot/src/control_node.cpp:206:14:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[KKinematics::VectorXd {aka Eigen::Matrix<double, -1, 1>}[m[Kâ€™ to â€˜[01m[Kbool[m[Kâ€™
make[2]: *** [CMakeFiles/control_node.dir/src/control_node.cpp.o] Error 1
make[1]: *** [CMakeFiles/control_node.dir/all] Error 2
make: *** [all] Error 2
